@import 'variables';
@import 'mixins';

.container {
    margin: 30px 20px;
    max-width: 98%;
}

.stl-page-heading-title {
    @include grid();
    grid-gap: 10px;
    grid-template-areas: "title action"
                         "breadcrumb action";

    h1 {
        grid-area: title;
        @include rgba(color, $main-grey);
        font-weight: 300;
        font-size: 24px;
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        margin: 0;
    }

    .breadcrumb {
        grid-area: breadcrumb;
        padding: 0;
        list-style: none;
        margin-bottom: 0;
        background: inherit;
        letter-spacing: 0.02em;

        li {
            display: inline-block;

            a {
                @include rgba(color, $main-grey);

                &:hover {
                    text-decoration: underline;
                }
            }

            + li:before {
                content: "/"; // Unicode space added since inline-block means non-collapsing white-space
                @include rgba(color, $main-grey);
                padding: 0 5px;
            }
        }

        .active {
            @include rgba(color, $dark-blue);
        }
    }

    .top-buttons {
        grid-area: action;
        justify-self: end;

        .btn-import {
            @include rgba(bg, $medium-blue, 0);
            @include rgba(color, $medium-blue);
            @include border(b, 1px, solid, $medium-blue, 1);

            &:hover {
                @include rgba(bg, $medium-blue, 1);
                @include rgba(color, $white);
            }
        }

        .btn-create-new {
            @include rgba(bg, $medium-blue);
            @include rgba(color, $white);

            &:hover {
                @include rgba(bg, $medium-blue, 0.7);
            }
        }
    }
}


.stl-form {
    @include rgba(bg, $white);
    padding: 15px 30px 35px 30px;
    margin-top: 30px;
    box-shadow: 0px -2px 0px 0px #dee5e9;

    // For input tags
    input {
        @include rgba(color, $main-grey);
        @include border(b, 1px, solid, $border-grey, 1);
        width: 100%;
        height: 34px;
        padding: 10px;
        font-size: 13px;
        line-height: 14px;
        border-radius: 3px;

        &:focus {
            @include border(b, 1px, solid, $light-blue, 1);
        }
    }

    input.ng-invalid.ng-dirty {
        @include border(b, 1px, solid, $negative-red, 1);

        &:focus {
            @include border(b, 1px, solid, $negative-red, 1);
        }
    }

    // For textarea
    textarea {
        @include rgba(color, $main-grey);
        @include border(b, 1px, solid, $border-grey, 1);
        height: auto;
        padding: 10px;
        font-size: 13px;
        line-height: 14px;
        border-radius: 3px;

        &:focus {
            @include border(b, 1px, solid, $light-blue, 1);
        }
    }

    // For select tags
    select {
        @include border(b, 1px, solid, $border-grey, 1);
        border-radius: 3px;
        padding-left: 7px;
        font-size: 13px;
        height: 34px;
        width: 100%;

        &:focus {
            @include border(b, 1px, solid, $light-blue, 1);
            outline: none;
        }
    }

    // For labels
    label {
        margin: 10px 0;
        font-size: 13px;
        font-weight: bold;
    }

    // Red dot for required fields
    .field-required {
        @include rgba(color, $negative-red);
        font-size: 4px;
        padding-bottom: 3px;
        vertical-align: middle;
    }

    // For displaying error messages
    .stl-validation-message {
        .stl-error-message-box {
            @include rgba(bg, $negative-red);
            @include rgba(color, $white);
            position: relative;
            border-radius: 3px;
            margin-top: 5px;
            padding: 5px 10px;
            font-size: 12px;
            letter-spacing: 0.02em;
            
            &::before {
                padding-right: 8px;
            }
            
            &::after {
                bottom: 100%;
                left: 1%;
                border: solid transparent;
                content: " ";
                position: absolute;
                pointer-events: none;
                border-bottom-color: $negative-red;
                border-width: 5px;
            }
        }
    }

    // For multi-select tags-input
    tags-input {
        .tags {
            @include border(b, 1px, solid, $border-grey, 1);
            height: 34px;
            border-radius: 3px;
            box-shadow: none;

            .tag-item {
                @include rgba(color, $white);
                @include rgba(bg, $medium-blue);
                margin-top: 2px;
                margin-left: 4px;
                border-radius: 3px;
                font-size: 13px;
                height: 26px;

                ti-tag-item {
                    &::before {
                        font-size: 12px;
                        margin-left: 1px;
                        margin-right: 5px;
                    }
                }

                .remove-button {
                    margin-left: 5px;
                    cursor: pointer;
                    vertical-align: middle;
                    font-size: 14px;
                    font-weight: bold;
                }
            }
            
            // For the input tag inside multi-select
            .input {
                border: none;
                font-size: 13px;
            }
        }

        .tags.focused {
            @include border(b, 1px, solid, $light-blue, 1);
        }
    }

    // Give red border to input box when an error has occurred
    .form-control.error {
        @include border(b, 1px, solid, $negative-red);
    }

    // Custom margin bottom added to accomodate error messages
    .stl-margin-bottom-custom {
        margin-bottom: 7px;

        // Remove default outline on select tag focus 
        div {
            &::focus {
                outline: none;
            }
        }
    }

    .stl-date-picker {
        cursor: pointer;
    }
}

// For Date-Time Picker
.input-group {
    input {
        width: 97%;
    }

    .input-group-append {
        button {
            @include border(b, 1px, solid, $border-grey, 1);
            height: 34px;

            &:hover {
                @include rgba(bg, $border-grey, 0.1);
            }
        }
    }
}

// For styling dropdown template
.stl-template-dropdown {
    .temp-desc, .temp-name {
        letter-spacing: 0.03em;
        margin-left: 10px;
    }
    .temp-name {
        font-weight: bold;
        @include rgba(color, $light-blue);
    }
    .temp-value {
        font-weight: bold;
        @include rgba(color, $positive-green);
    }
}


// For table section
.table-section {
    @include border(bt, 1px, solid, $divider-grey);
    padding-top: 20px;
    margin-top: 20px;

    .table-section-title {
        font-weight: bold;

        div {
            display: inline-block;
        }
    }

    .add-item {
        @include rgba(bg, $white);
        @include rgba(color, $light-blue);
        @include border(b, 1px, solid, $light-blue, 1);
        margin-bottom: 20px;
        font-size: 14px;
    
        &:hover {
            @include rgba(bg, $light-blue);
            @include rgba(color, $white);
        }
    }
}

// For checkbox
[type="checkbox"]:checked,
[type="checkbox"]:not(:checked) {
    position: absolute;
    left: -9999px;
}
[type="checkbox"]:checked + label,
[type="checkbox"]:not(:checked) + label
{
    position: relative;
    padding-left: 25px;
    margin-top: 25px;
    cursor: pointer;
}
[type="checkbox"]:checked + label:before,
[type="checkbox"]:not(:checked) + label:before {
    @include border(b, 1px, solid, $border-grey);
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    width: 18px;
    height: 18px;
}
[type="checkbox"]:checked + label:after,
[type="checkbox"]:not(:checked) + label:after {
    content: '';
    width: 9px;
    height: 8px;
    background: $medium-blue;
    position: absolute;
    top: 5px;
    left: 4px;
    -webkit-transition: all 0.2s ease;
    transition: all 0.2s ease;
}
[type="checkbox"]:not(:checked) + label:after {
    opacity: 0;
    -webkit-transform: scale(0);
    transform: scale(0);
}
[type="checkbox"]:checked + label:after {
    opacity: 1;
    -webkit-transform: scale(1);
    transform: scale(1);
}
  